version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    steps:
    - checkout
    - run:
        name: docker build
        command: docker build -t ${DOCKER_HUB_USER}/${DOCKER_HUB_IMAGE} .
        working_directory: service/web
    - run:
        name: docker login
        command: docker login -u ${DOCKER_HUB_USER} -p "${DOCKER_HUB_PASSWORD}"
    - run:
        name: docker push
        command: docker push ${DOCKER_HUB_USER}/${DOCKER_HUB_IMAGE}:latest
        working_directory: service/web

  test:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: make network
          command: bash make-network.sh
      - run:
          name: nginx up
          command: docker-compose -f docker-compose.dev.yml up -d
          working_directory: nginx
      - run:
          name: service up
          command: export DOMAIN=${DOMAIN} && docker-compose -f docker-compose.test.yml up -d
          working_directory: service
      - run:
          name: Install JUnit
          command: go get github.com/jstemmer/go-junit-report
      - run:
          name: Wait until the db container fully set up
          command: |
            docker run --network shared \
              jwilder/dockerize -wait tcp://db:3306 -timeout 90s -wait-retry-interval 3s
      - run:
          name: golint bash script cp
          command: docker cp golint.sh web:/go/src/github.com/fukuyama012/cycle-reminder/service/web/
          working_directory: service
      - run:
          name: golint bash exec
          command: docker-compose -f docker-compose.test.yml exec web bash golint.sh
          working_directory: service
      - run:
          name: go test
          command: docker-compose -f docker-compose.test.yml exec -T web go test ./... -v | tee go-test.out
          working_directory: service
      - run:
          name: generate test report
          command: go-junit-report < go-test.out > report.xml
          working_directory: service
      - store_artifacts:
          path: service/report.xml
          destination: report.xml

  deploy-prod:
    machine:
      image: circleci/classic:edge
    steps:
    - checkout
    - add_ssh_keys:
        fingerprints:
          - "e1:23:4d:45:16:6d:59:17:5c:0b:6f:e4:3f:b6:f3:84"
    - run:
        name: Start ssh-keyscan
        command: |
          ssh-keyscan -p ${HOST_PORT} ${HOST_NAME} >> ~/.ssh/known_hosts
    - run:
        name: transfer docker-compose.yml
        command: scp -P ${HOST_PORT} docker-compose.yml ${HOST_USER}@${HOST_NAME}:/home/${HOST_USER}/cycle-reminder/service
        working_directory: service
    - run:
        name: new images deploy
        command: |
          ssh -p ${HOST_PORT} ${HOST_USER}@${HOST_NAME} "cd ~/cycle-reminder/service && export DOMAIN=${DOMAIN} && docker-compose pull web && docker-compose up --no-deps -d web"
    - run:
        name: clean up unnecessary images
        command: |
          ssh -p ${HOST_PORT} ${HOST_USER}@${HOST_NAME} 'docker rmi $(docker images -f dangling=true -q)'

workflows:
  version: 2
  build_and_deploy:
    jobs:
    - build
    - test:
        requires:
        - build
    - deploy-prod:
        requires:
        - test
        filters:
          branches:
            only: master
